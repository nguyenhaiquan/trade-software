//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStockService")]
    public interface IStockService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Reset", ReplyAction="http://tempuri.org/IStockService/ResetResponse")]
        void Reset();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Reset", ReplyAction="http://tempuri.org/IStockService/ResetResponse")]
        System.Threading.Tasks.Task ResetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ClearCache", ReplyAction="http://tempuri.org/IStockService/ClearCacheResponse")]
        void ClearCache();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ClearCache", ReplyAction="http://tempuri.org/IStockService/ClearCacheResponse")]
        System.Threading.Tasks.Task ClearCacheAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteCache", ReplyAction="http://tempuri.org/IStockService/DeleteCacheResponse")]
        void DeleteCache(string cacheName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteCache", ReplyAction="http://tempuri.org/IStockService/DeleteCacheResponse")]
        System.Threading.Tasks.Task DeleteCacheAsync(string cacheName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetServerDateTime", ReplyAction="http://tempuri.org/IStockService/GetServerDateTimeResponse")]
        System.DateTime GetServerDateTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetServerDateTime", ReplyAction="http://tempuri.org/IStockService/GetServerDateTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetServerDateTimeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/IsWorking", ReplyAction="http://tempuri.org/IStockService/IsWorkingResponse")]
        bool IsWorking();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/IsWorking", ReplyAction="http://tempuri.org/IStockService/IsWorkingResponse")]
        System.Threading.Tasks.Task<bool> IsWorkingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateMessage", ReplyAction="http://tempuri.org/IStockService/UpdateMessageResponse")]
        DataAccess.ServiceReference1.UpdateMessageResponse UpdateMessage(DataAccess.ServiceReference1.UpdateMessageRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateMessage", ReplyAction="http://tempuri.org/IStockService/UpdateMessageResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateMessageResponse> UpdateMessageAsync(DataAccess.ServiceReference1.UpdateMessageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePriceData", ReplyAction="http://tempuri.org/IStockService/UpdatePriceDataResponse")]
        DataAccess.ServiceReference1.UpdatePriceDataResponse UpdatePriceData(DataAccess.ServiceReference1.UpdatePriceDataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePriceData", ReplyAction="http://tempuri.org/IStockService/UpdatePriceDataResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePriceDataResponse> UpdatePriceDataAsync(DataAccess.ServiceReference1.UpdatePriceDataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCodeCat", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeCatResponse")]
        DataAccess.ServiceReference1.UpdateSysCodeCatResponse UpdateSysCodeCat(DataAccess.ServiceReference1.UpdateSysCodeCatRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCodeCat", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeCatResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysCodeCatResponse> UpdateSysCodeCatAsync(DataAccess.ServiceReference1.UpdateSysCodeCatRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCode", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeResponse")]
        DataAccess.ServiceReference1.UpdateSysCodeResponse UpdateSysCode(DataAccess.ServiceReference1.UpdateSysCodeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysCode", ReplyAction="http://tempuri.org/IStockService/UpdateSysCodeResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysCodeResponse> UpdateSysCodeAsync(DataAccess.ServiceReference1.UpdateSysCodeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStock", ReplyAction="http://tempuri.org/IStockService/UpdateStockResponse")]
        DataAccess.ServiceReference1.UpdateStockResponse UpdateStock(DataAccess.ServiceReference1.UpdateStockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStock", ReplyAction="http://tempuri.org/IStockService/UpdateStockResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateStockResponse> UpdateStockAsync(DataAccess.ServiceReference1.UpdateStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestor", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorResponse")]
        DataAccess.ServiceReference1.UpdateInvestorResponse UpdateInvestor(DataAccess.ServiceReference1.UpdateInvestorRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestor", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateInvestorResponse> UpdateInvestorAsync(DataAccess.ServiceReference1.UpdateInvestorRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolio", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioResponse")]
        DataAccess.ServiceReference1.UpdatePortfolioResponse UpdatePortfolio(DataAccess.ServiceReference1.UpdatePortfolioRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolio", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePortfolioResponse> UpdatePortfolioAsync(DataAccess.ServiceReference1.UpdatePortfolioRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolioDetail", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioDetailResponse")]
        DataAccess.ServiceReference1.UpdatePortfolioDetailResponse UpdatePortfolioDetail(DataAccess.ServiceReference1.UpdatePortfolioDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdatePortfolioDetail", ReplyAction="http://tempuri.org/IStockService/UpdatePortfolioDetailResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePortfolioDetailResponse> UpdatePortfolioDetailAsync(DataAccess.ServiceReference1.UpdatePortfolioDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStockExchange", ReplyAction="http://tempuri.org/IStockService/UpdateStockExchangeResponse")]
        DataAccess.ServiceReference1.UpdateStockExchangeResponse UpdateStockExchange(DataAccess.ServiceReference1.UpdateStockExchangeRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateStockExchange", ReplyAction="http://tempuri.org/IStockService/UpdateStockExchangeResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateStockExchangeResponse> UpdateStockExchangeAsync(DataAccess.ServiceReference1.UpdateStockExchangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateExchangeDetail", ReplyAction="http://tempuri.org/IStockService/UpdateExchangeDetailResponse")]
        DataAccess.ServiceReference1.UpdateExchangeDetailResponse UpdateExchangeDetail(DataAccess.ServiceReference1.UpdateExchangeDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateExchangeDetail", ReplyAction="http://tempuri.org/IStockService/UpdateExchangeDetailResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateExchangeDetailResponse> UpdateExchangeDetailAsync(DataAccess.ServiceReference1.UpdateExchangeDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTransactions", ReplyAction="http://tempuri.org/IStockService/UpdateTransactionsResponse")]
        DataAccess.ServiceReference1.UpdateTransactionsResponse UpdateTransactions(DataAccess.ServiceReference1.UpdateTransactionsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTransactions", ReplyAction="http://tempuri.org/IStockService/UpdateTransactionsResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateTransactionsResponse> UpdateTransactionsAsync(DataAccess.ServiceReference1.UpdateTransactionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestorStock", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorStockResponse")]
        DataAccess.ServiceReference1.UpdateInvestorStockResponse UpdateInvestorStock(DataAccess.ServiceReference1.UpdateInvestorStockRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateInvestorStock", ReplyAction="http://tempuri.org/IStockService/UpdateInvestorStockResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateInvestorStockResponse> UpdateInvestorStockAsync(DataAccess.ServiceReference1.UpdateInvestorStockRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTradeAlert", ReplyAction="http://tempuri.org/IStockService/UpdateTradeAlertResponse")]
        DataAccess.ServiceReference1.UpdateTradeAlertResponse UpdateTradeAlert(DataAccess.ServiceReference1.UpdateTradeAlertRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateTradeAlert", ReplyAction="http://tempuri.org/IStockService/UpdateTradeAlertResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateTradeAlertResponse> UpdateTradeAlertAsync(DataAccess.ServiceReference1.UpdateTradeAlertRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysAutoKeyPending", ReplyAction="http://tempuri.org/IStockService/UpdateSysAutoKeyPendingResponse")]
        DataAccess.ServiceReference1.UpdateSysAutoKeyPendingResponse UpdateSysAutoKeyPending(DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/UpdateSysAutoKeyPending", ReplyAction="http://tempuri.org/IStockService/UpdateSysAutoKeyPendingResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysAutoKeyPendingResponse> UpdateSysAutoKeyPendingAsync(DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStock", ReplyAction="http://tempuri.org/IStockService/DeleteStockResponse")]
        void DeleteStock(string stockCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStock", ReplyAction="http://tempuri.org/IStockService/DeleteStockResponse")]
        System.Threading.Tasks.Task DeleteStockAsync(string stockCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStockExchange", ReplyAction="http://tempuri.org/IStockService/DeleteStockExchangeResponse")]
        void DeleteStockExchange(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteStockExchange", ReplyAction="http://tempuri.org/IStockService/DeleteStockExchangeResponse")]
        System.Threading.Tasks.Task DeleteStockExchangeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteInvestor", ReplyAction="http://tempuri.org/IStockService/DeleteInvestorResponse")]
        void DeleteInvestor(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteInvestor", ReplyAction="http://tempuri.org/IStockService/DeleteInvestorResponse")]
        System.Threading.Tasks.Task DeleteInvestorAsync(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeletePortfolio", ReplyAction="http://tempuri.org/IStockService/DeletePortfolioResponse")]
        void DeletePortfolio(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeletePortfolio", ReplyAction="http://tempuri.org/IStockService/DeletePortfolioResponse")]
        System.Threading.Tasks.Task DeletePortfolioAsync(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCodeCat", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeCatResponse")]
        void DeleteSysCodeCat(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCodeCat", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeCatResponse")]
        System.Threading.Tasks.Task DeleteSysCodeCatAsync(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCode", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeResponse")]
        void DeleteSysCode(string catCode, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteSysCode", ReplyAction="http://tempuri.org/IStockService/DeleteSysCodeResponse")]
        System.Threading.Tasks.Task DeleteSysCodeAsync(string catCode, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteTradeAlert", ReplyAction="http://tempuri.org/IStockService/DeleteTradeAlertResponse")]
        void DeleteTradeAlert(int alertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DeleteTradeAlert", ReplyAction="http://tempuri.org/IStockService/DeleteTradeAlertResponse")]
        System.Threading.Tasks.Task DeleteTradeAlertAsync(int alertId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockByStatus", ReplyAction="http://tempuri.org/IStockService/GetStockByStatusResponse")]
        databases.tmpDS.stockCodeDataTable GetStockByStatus(commonTypes.AppTypes.CommonStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockByStatus", ReplyAction="http://tempuri.org/IStockService/GetStockByStatusResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStockByStatusAsync(commonTypes.AppTypes.CommonStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorShortList", ReplyAction="http://tempuri.org/IStockService/GetInvestorShortListResponse")]
        databases.tmpDS.investorDataTable GetInvestorShortList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorShortList", ReplyAction="http://tempuri.org/IStockService/GetInvestorShortListResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.investorDataTable> GetInvestorShortListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_ByDate", ReplyAction="http://tempuri.org/IStockService/GetSyslog_ByDateResponse")]
        databases.baseDS.sysLogDataTable GetSyslog_ByDate(System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_ByDate", ReplyAction="http://tempuri.org/IStockService/GetSyslog_ByDateResponse")]
        System.Threading.Tasks.Task<databases.baseDS.sysLogDataTable> GetSyslog_ByDateAsync(System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_BySQL", ReplyAction="http://tempuri.org/IStockService/GetSyslog_BySQLResponse")]
        databases.baseDS.sysLogDataTable GetSyslog_BySQL(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSyslog_BySQL", ReplyAction="http://tempuri.org/IStockService/GetSyslog_BySQLResponse")]
        System.Threading.Tasks.Task<databases.baseDS.sysLogDataTable> GetSyslog_BySQLAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockFull", ReplyAction="http://tempuri.org/IStockService/GetStockFullResponse")]
        databases.baseDS.stockCodeDataTable GetStockFull();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockFull", ReplyAction="http://tempuri.org/IStockService/GetStockFullResponse")]
        System.Threading.Tasks.Task<databases.baseDS.stockCodeDataTable> GetStockFullAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByWatchList", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByWatchListResponse")]
        string[] GetStockList_ByWatchList(string[] watchList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByWatchList", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByWatchListResponse")]
        System.Threading.Tasks.Task<string[]> GetStockList_ByWatchListAsync(string[] watchList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByBizSectorResponse")]
        string[] GetStockList_ByBizSector(string[] sectors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockList_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStockList_ByBizSectorResponse")]
        System.Threading.Tasks.Task<string[]> GetStockList_ByBizSectorAsync(string[] sectors);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockExchange", ReplyAction="http://tempuri.org/IStockService/GetStockExchangeResponse")]
        databases.baseDS.stockExchangeDataTable GetStockExchange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStockExchange", ReplyAction="http://tempuri.org/IStockService/GetStockExchangeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.stockExchangeDataTable> GetStockExchangeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetExchangeDetail", ReplyAction="http://tempuri.org/IStockService/GetExchangeDetailResponse")]
        databases.baseDS.exchangeDetailDataTable GetExchangeDetail(string marketCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetExchangeDetail", ReplyAction="http://tempuri.org/IStockService/GetExchangeDetailResponse")]
        System.Threading.Tasks.Task<databases.baseDS.exchangeDetailDataTable> GetExchangeDetailAsync(string marketCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetEmployeeRange", ReplyAction="http://tempuri.org/IStockService/GetEmployeeRangeResponse")]
        databases.baseDS.employeeRangeDataTable GetEmployeeRange();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetEmployeeRange", ReplyAction="http://tempuri.org/IStockService/GetEmployeeRangeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.employeeRangeDataTable> GetEmployeeRangeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizIndustryResponse")]
        databases.baseDS.bizIndustryDataTable GetBizIndustry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizIndustryResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizIndustryDataTable> GetBizIndustryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSuperSectorResponse")]
        databases.baseDS.bizSuperSectorDataTable GetBizSuperSector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSuperSectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSuperSectorDataTable> GetBizSuperSectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSector", ReplyAction="http://tempuri.org/IStockService/GetBizSectorResponse")]
        databases.baseDS.bizSectorDataTable GetBizSector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSector", ReplyAction="http://tempuri.org/IStockService/GetBizSectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSectorDataTable> GetBizSectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSector();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorByIndustryResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSectorByIndustry(string industryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorByIndustryResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorByIndustryAsync(string industryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySuperSectorResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSector(string superSectorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySuperSectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorBySuperSectorAsync(string superSectorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySectorResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSectorBySector(string sectorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSectorBySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSectorBySectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorBySectorAsync(string sectorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetFeedbackCat", ReplyAction="http://tempuri.org/IStockService/GetFeedbackCatResponse")]
        databases.baseDS.feedbackCatDataTable GetFeedbackCat(string cultureCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetFeedbackCat", ReplyAction="http://tempuri.org/IStockService/GetFeedbackCatResponse")]
        System.Threading.Tasks.Task<databases.baseDS.feedbackCatDataTable> GetFeedbackCatAsync(string cultureCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCountry", ReplyAction="http://tempuri.org/IStockService/GetCountryResponse")]
        databases.baseDS.countryDataTable GetCountry();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCountry", ReplyAction="http://tempuri.org/IStockService/GetCountryResponse")]
        System.Threading.Tasks.Task<databases.baseDS.countryDataTable> GetCountryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCurrency", ReplyAction="http://tempuri.org/IStockService/GetCurrencyResponse")]
        databases.baseDS.currencyDataTable GetCurrency();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetCurrency", ReplyAction="http://tempuri.org/IStockService/GetCurrencyResponse")]
        System.Threading.Tasks.Task<databases.baseDS.currencyDataTable> GetCurrencyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorCat", ReplyAction="http://tempuri.org/IStockService/GetInvestorCatResponse")]
        databases.baseDS.investorCatDataTable GetInvestorCat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestorCat", ReplyAction="http://tempuri.org/IStockService/GetInvestorCatResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorCatDataTable> GetInvestorCatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCode", ReplyAction="http://tempuri.org/IStockService/GetSysCodeResponse")]
        databases.baseDS.sysCodeDataTable GetSysCode(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCode", ReplyAction="http://tempuri.org/IStockService/GetSysCodeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.sysCodeDataTable> GetSysCodeAsync(string catCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCodeCat", ReplyAction="http://tempuri.org/IStockService/GetSysCodeCatResponse")]
        databases.baseDS.sysCodeCatDataTable GetSysCodeCat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetSysCodeCat", ReplyAction="http://tempuri.org/IStockService/GetSysCodeCatResponse")]
        System.Threading.Tasks.Task<databases.baseDS.sysCodeCatDataTable> GetSysCodeCatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByAccount", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByAccountResponse")]
        databases.baseDS.investorDataTable GetInvestor_ByAccount(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByAccount", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByAccountResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByAccountAsync(string account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByCode", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByCodeResponse")]
        databases.baseDS.investorDataTable GetInvestor_ByCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByCode", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByCodeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByEmail", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByEmailResponse")]
        databases.baseDS.investorDataTable GetInvestor_ByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_ByEmail", ReplyAction="http://tempuri.org/IStockService/GetInvestor_ByEmailResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_BySQL", ReplyAction="http://tempuri.org/IStockService/GetInvestor_BySQLResponse")]
        databases.baseDS.investorDataTable GetInvestor_BySQL(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetInvestor_BySQL", ReplyAction="http://tempuri.org/IStockService/GetInvestor_BySQLResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_BySQLAsync(string sql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_InPortfolio", ReplyAction="http://tempuri.org/IStockService/GetStock_InPortfolioResponse")]
        databases.tmpDS.stockCodeDataTable GetStock_InPortfolio(string[] portfolios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_InPortfolio", ReplyAction="http://tempuri.org/IStockService/GetStock_InPortfolioResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStock_InPortfolioAsync(string[] portfolios);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStock_ByBizSectorResponse")]
        databases.tmpDS.stockCodeDataTable GetStock_ByBizSector(string[] bizSector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetStock_ByBizSector", ReplyAction="http://tempuri.org/IStockService/GetStock_ByBizSectorResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStock_ByBizSectorAsync(string[] bizSector);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_ByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_ByIndustryResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustry(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_ByIndustry", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_ByIndustryResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_ByIndustryAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySuperSectorResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSector(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySuperSector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySuperSectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_BySuperSectorAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySectorResponse")]
        databases.baseDS.bizSubSectorDataTable GetBizSubSector_BySector(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBizSubSector_BySector", ReplyAction="http://tempuri.org/IStockService/GetBizSubSector_BySectorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_BySectorAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndTypeResponse")]
        databases.baseDS.portfolioDataTable GetPortfolio_ByInvestorAndType(string investorCode, commonTypes.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorAndTypeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByInvestorAndTypeAsync(string investorCode, commonTypes.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByTypeResponse")]
        databases.baseDS.portfolioDataTable GetPortfolio_ByType(commonTypes.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByTypeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByTypeAsync(commonTypes.AppTypes.PortfolioTypes type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByCodeResponse")]
        databases.baseDS.portfolioDataTable GetPortfolio_ByCode(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByCodeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByCodeAsync(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorResponse")]
        databases.baseDS.portfolioDataTable GetPortfolio_ByInvestor(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolio_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetPortfolio_ByInvestorResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByInvestorAsync(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert", ReplyAction="http://tempuri.org/IStockService/GetTradeAlertResponse")]
        databases.baseDS.tradeAlertDataTable GetTradeAlert(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert", ReplyAction="http://tempuri.org/IStockService/GetTradeAlertResponse")]
        System.Threading.Tasks.Task<databases.baseDS.tradeAlertDataTable> GetTradeAlertAsync(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTradeAlert_BySQLResponse")]
        databases.baseDS.tradeAlertDataTable GetTradeAlert_BySQL(string alertSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradeAlert_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTradeAlert_BySQLResponse")]
        System.Threading.Tasks.Task<databases.baseDS.tradeAlertDataTable> GetTradeAlert_BySQLAsync(string alertSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransaction_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTransaction_BySQLResponse")]
        databases.baseDS.transactionsDataTable GetTransaction_BySQL(string transSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransaction_BySQL", ReplyAction="http://tempuri.org/IStockService/GetTransaction_BySQLResponse")]
        System.Threading.Tasks.Task<databases.baseDS.transactionsDataTable> GetTransaction_BySQLAsync(string transSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByTypeResponse")]
        databases.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByType(commonTypes.AppTypes.PortfolioTypes[] types);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByType", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByTypeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDetailDataTable> GetPortfolioDetail_ByTypeAsync(commonTypes.AppTypes.PortfolioTypes[] types);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByCodeResponse")]
        databases.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCode(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPortfolioDetail_ByCode", ReplyAction="http://tempuri.org/IStockService/GetPortfolioDetail_ByCodeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.portfolioDetailDataTable> GetPortfolioDetail_ByCodeAsync(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestorResponse")]
        databases.tmpDS.investorStockDataTable GetOwnedStockSum_ByInvestor(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestor", ReplyAction="http://tempuri.org/IStockService/GetOwnedStockSum_ByInvestorResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.investorStockDataTable> GetOwnedStockSum_ByInvestorAsync(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolio", ReplyAction="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolioResponse")]
        databases.baseDS.investorStockDataTable GetOwnedStock_ByPortfolio(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolio", ReplyAction="http://tempuri.org/IStockService/GetOwnedStock_ByPortfolioResponse")]
        System.Threading.Tasks.Task<databases.baseDS.investorStockDataTable> GetOwnedStock_ByPortfolioAsync(string portfolioCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPriceSum", ReplyAction="http://tempuri.org/IStockService/GetLastPriceSumResponse")]
        databases.baseDS.lastPriceDataDataTable GetLastPriceSum(commonTypes.AppTypes.PriceDataType type, string timeScaleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPriceSum", ReplyAction="http://tempuri.org/IStockService/GetLastPriceSumResponse")]
        System.Threading.Tasks.Task<databases.baseDS.lastPriceDataDataTable> GetLastPriceSumAsync(commonTypes.AppTypes.PriceDataType type, string timeScaleCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceData", ReplyAction="http://tempuri.org/IStockService/GetPriceDataResponse")]
        databases.baseDS.priceDataDataTable GetPriceData(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetPriceData", ReplyAction="http://tempuri.org/IStockService/GetPriceDataResponse")]
        System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetPriceDataAsync(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastAlertTime", ReplyAction="http://tempuri.org/IStockService/GetLastAlertTimeResponse")]
        System.DateTime GetLastAlertTime(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastAlertTime", ReplyAction="http://tempuri.org/IStockService/GetLastAlertTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> GetLastAlertTimeAsync(string investorCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDate", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDateResponse")]
        databases.baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDate", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_FrDateResponse")]
        System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetData_ByTimeScale_Code_FrDateAsync(string timeScaleCode, string stockCode, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRange", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRangeResponse")]
        databases.baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRange", ReplyAction="http://tempuri.org/IStockService/GetData_ByTimeScale_Code_DateRangeResponse")]
        System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetData_ByTimeScale_Code_DateRangeAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_TotalRow", ReplyAction="http://tempuri.org/IStockService/GetData_TotalRowResponse")]
        int GetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetData_TotalRow", ReplyAction="http://tempuri.org/IStockService/GetData_TotalRowResponse")]
        System.Threading.Tasks.Task<int> GetData_TotalRowAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransactionInfo", ReplyAction="http://tempuri.org/IStockService/GetTransactionInfoResponse")]
        DataAccess.ServiceReference1.GetTransactionInfoResponse GetTransactionInfo(DataAccess.ServiceReference1.GetTransactionInfoRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTransactionInfo", ReplyAction="http://tempuri.org/IStockService/GetTransactionInfoResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetTransactionInfoResponse> GetTransactionInfoAsync(DataAccess.ServiceReference1.GetTransactionInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_ByDate", ReplyAction="http://tempuri.org/IStockService/GetMesssage_ByDateResponse")]
        databases.baseDS.messagesDataTable GetMesssage_ByDate(System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_ByDate", ReplyAction="http://tempuri.org/IStockService/GetMesssage_ByDateResponse")]
        System.Threading.Tasks.Task<databases.baseDS.messagesDataTable> GetMesssage_ByDateAsync(System.DateTime frDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_BySql", ReplyAction="http://tempuri.org/IStockService/GetMesssage_BySqlResponse")]
        databases.baseDS.messagesDataTable GetMesssage_BySql(string sqlCmd2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetMesssage_BySql", ReplyAction="http://tempuri.org/IStockService/GetMesssage_BySqlResponse")]
        System.Threading.Tasks.Task<databases.baseDS.messagesDataTable> GetMesssage_BySqlAsync(string sqlCmd2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/LoadAnalysisData", ReplyAction="http://tempuri.org/IStockService/LoadAnalysisDataResponse")]
        string LoadAnalysisData(string code, commonClass.DataParams dataParam, bool forceReadNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/LoadAnalysisData", ReplyAction="http://tempuri.org/IStockService/LoadAnalysisDataResponse")]
        System.Threading.Tasks.Task<string> LoadAnalysisDataAsync(string code, commonClass.DataParams dataParam, bool forceReadNew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data_ByKey", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_Data_ByKeyResponse")]
        DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyResponse GetAnalysis_Data_ByKey(DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data_ByKey", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_Data_ByKeyResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyResponse> GetAnalysis_Data_ByKeyAsync(DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_DataResponse")]
        DataAccess.ServiceReference1.GetAnalysis_DataResponse GetAnalysis_Data(DataAccess.ServiceReference1.GetAnalysis_DataRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetAnalysis_Data", ReplyAction="http://tempuri.org/IStockService/GetAnalysis_DataResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetAnalysis_DataResponse> GetAnalysis_DataAsync(DataAccess.ServiceReference1.GetAnalysis_DataRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetIndicatorData", ReplyAction="http://tempuri.org/IStockService/GetIndicatorDataResponse")]
        commonClass.DataValues[] GetIndicatorData(string code, commonClass.DataParams dataParam, string metaName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetIndicatorData", ReplyAction="http://tempuri.org/IStockService/GetIndicatorDataResponse")]
        System.Threading.Tasks.Task<commonClass.DataValues[]> GetIndicatorDataAsync(string code, commonClass.DataParams dataParam, string metaName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_Profit", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_ProfitResponse")]
        decimal[][] Estimate_Matrix_Profit(commonTypes.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_Profit", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_ProfitResponse")]
        System.Threading.Tasks.Task<decimal[][]> Estimate_Matrix_ProfitAsync(commonTypes.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeight", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeightResponse")]
        double[][] Estimate_Matrix_LastBizWeight(commonClass.DataParams dataParams, string[] stockCodeList, string[] strategyList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeight", ReplyAction="http://tempuri.org/IStockService/Estimate_Matrix_LastBizWeightResponse")]
        System.Threading.Tasks.Task<double[][]> Estimate_Matrix_LastBizWeightAsync(commonClass.DataParams dataParams, string[] stockCodeList, string[] strategyList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Analysis", ReplyAction="http://tempuri.org/IStockService/AnalysisResponse")]
        commonClass.TradePointInfo[] Analysis(string dataKey, string strategyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Analysis", ReplyAction="http://tempuri.org/IStockService/AnalysisResponse")]
        System.Threading.Tasks.Task<commonClass.TradePointInfo[]> AnalysisAsync(string dataKey, string strategyCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/MakeTransaction", ReplyAction="http://tempuri.org/IStockService/MakeTransactionResponse")]
        DataAccess.ServiceReference1.MakeTransactionResponse MakeTransaction(DataAccess.ServiceReference1.MakeTransactionRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/MakeTransaction", ReplyAction="http://tempuri.org/IStockService/MakeTransactionResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.MakeTransactionResponse> MakeTransactionAsync(DataAccess.ServiceReference1.MakeTransactionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradePointWithEstimationDetail", ReplyAction="http://tempuri.org/IStockService/GetTradePointWithEstimationDetailResponse")]
        DataAccess.ServiceReference1.GetTradePointWithEstimationDetailResponse GetTradePointWithEstimationDetail(DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTradePointWithEstimationDetail", ReplyAction="http://tempuri.org/IStockService/GetTradePointWithEstimationDetailResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetTradePointWithEstimationDetailResponse> GetTradePointWithEstimationDetailAsync(DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpen", ReplyAction="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpenResponse")]
        databases.tmpDS.priceDiagnoseDataTable DiagnosePrice_CloseAndNextOpen(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpen", ReplyAction="http://tempuri.org/IStockService/DiagnosePrice_CloseAndNextOpenResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.priceDiagnoseDataTable> DiagnosePrice_CloseAndNextOpenAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ReAggregatePriceData", ReplyAction="http://tempuri.org/IStockService/ReAggregatePriceDataResponse")]
        void ReAggregatePriceData(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/ReAggregatePriceData", ReplyAction="http://tempuri.org/IStockService/ReAggregatePriceDataResponse")]
        System.Threading.Tasks.Task ReAggregatePriceDataAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGY", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGYResponse")]
        string GetXmlDoc2StringSTRATEGY();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGY", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringSTRATEGYResponse")]
        System.Threading.Tasks.Task<string> GetXmlDoc2StringSTRATEGYAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATOR", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATORResponse")]
        string GetXmlDoc2StringINDICATOR();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATOR", ReplyAction="http://tempuri.org/IStockService/GetXmlDoc2StringINDICATORResponse")]
        System.Threading.Tasks.Task<string> GetXmlDoc2StringINDICATORAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Load_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Load_Global_SettingsResponse")]
        DataAccess.ServiceReference1.Load_Global_SettingsResponse Load_Global_Settings(DataAccess.ServiceReference1.Load_Global_SettingsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Load_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Load_Global_SettingsResponse")]
        System.Threading.Tasks.Task<DataAccess.ServiceReference1.Load_Global_SettingsResponse> Load_Global_SettingsAsync(DataAccess.ServiceReference1.Load_Global_SettingsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Save_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Save_Global_SettingsResponse")]
        void Save_Global_Settings(commonTypes.GlobalSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/Save_Global_Settings", ReplyAction="http://tempuri.org/IStockService/Save_Global_SettingsResponse")]
        System.Threading.Tasks.Task Save_Global_SettingsAsync(commonTypes.GlobalSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteLog", ReplyAction="http://tempuri.org/IStockService/WriteLogResponse")]
        void WriteLog(byte logType, string investorCode, string desc, string source, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteLog", ReplyAction="http://tempuri.org/IStockService/WriteLogResponse")]
        System.Threading.Tasks.Task WriteLogAsync(byte logType, string investorCode, string desc, string source, string msg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteExcptionLog", ReplyAction="http://tempuri.org/IStockService/WriteExcptionLogResponse")]
        void WriteExcptionLog(string investorCode, common.SysLog.LogData logData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/WriteExcptionLog", ReplyAction="http://tempuri.org/IStockService/WriteExcptionLogResponse")]
        System.Threading.Tasks.Task WriteExcptionLogAsync(string investorCode, common.SysLog.LogData logData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceMarket", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceMarketResponse")]
        databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceMarket(System.DateTime beforeDate, string timeScaleCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceMarket", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceMarketResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceMarketAsync(System.DateTime beforeDate, string timeScaleCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceUserResponse")]
        databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceUser(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceUserResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceUserAsync(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUserResponse")]
        databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceOfUser(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUser", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceOfUserResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceOfUserAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarriance", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceResponse")]
        databases.tmpDS.dataVarrianceDataTable GetTopPriceVarriance(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetTopPriceVarriance", ReplyAction="http://tempuri.org/IStockService/GetTopPriceVarrianceResponse")]
        System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPrice", ReplyAction="http://tempuri.org/IStockService/GetLastPriceResponse")]
        databases.baseDS.lastPriceDataDataTable GetLastPrice(commonTypes.AppTypes.PriceDataType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetLastPrice", ReplyAction="http://tempuri.org/IStockService/GetLastPriceResponse")]
        System.Threading.Tasks.Task<databases.baseDS.lastPriceDataDataTable> GetLastPriceAsync(commonTypes.AppTypes.PriceDataType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBestStrategyCode", ReplyAction="http://tempuri.org/IStockService/GetBestStrategyCodeResponse")]
        string GetBestStrategyCode(string stockCode, string timeFrame, int order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockService/GetBestStrategyCode", ReplyAction="http://tempuri.org/IStockService/GetBestStrategyCodeResponse")]
        System.Threading.Tasks.Task<string> GetBestStrategyCodeAsync(string stockCode, string timeFrame, int order);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMessageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.messagesDataTable messageTbl;
        
        public UpdateMessageRequest() {
        }
        
        public UpdateMessageRequest(databases.baseDS.messagesDataTable messageTbl) {
            this.messageTbl = messageTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateMessageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateMessageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateMessageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.messagesDataTable messageTbl;
        
        public UpdateMessageResponse() {
        }
        
        public UpdateMessageResponse(bool UpdateMessageResult, databases.baseDS.messagesDataTable messageTbl) {
            this.UpdateMessageResult = UpdateMessageResult;
            this.messageTbl = messageTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePriceData", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePriceDataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.priceDataDataTable priceDataTbl;
        
        public UpdatePriceDataRequest() {
        }
        
        public UpdatePriceDataRequest(databases.baseDS.priceDataDataTable priceDataTbl) {
            this.priceDataTbl = priceDataTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePriceDataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePriceDataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePriceDataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.priceDataDataTable priceDataTbl;
        
        public UpdatePriceDataResponse() {
        }
        
        public UpdatePriceDataResponse(bool UpdatePriceDataResult, databases.baseDS.priceDataDataTable priceDataTbl) {
            this.UpdatePriceDataResult = UpdatePriceDataResult;
            this.priceDataTbl = priceDataTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeCat", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeCatRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.sysCodeCatDataTable sysCodeCatTbl;
        
        public UpdateSysCodeCatRequest() {
        }
        
        public UpdateSysCodeCatRequest(databases.baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            this.sysCodeCatTbl = sysCodeCatTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeCatResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeCatResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysCodeCatResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.sysCodeCatDataTable sysCodeCatTbl;
        
        public UpdateSysCodeCatResponse() {
        }
        
        public UpdateSysCodeCatResponse(bool UpdateSysCodeCatResult, databases.baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            this.UpdateSysCodeCatResult = UpdateSysCodeCatResult;
            this.sysCodeCatTbl = sysCodeCatTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCode", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.sysCodeDataTable sysCodeTbl;
        
        public UpdateSysCodeRequest() {
        }
        
        public UpdateSysCodeRequest(databases.baseDS.sysCodeDataTable sysCodeTbl) {
            this.sysCodeTbl = sysCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysCodeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysCodeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysCodeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.sysCodeDataTable sysCodeTbl;
        
        public UpdateSysCodeResponse() {
        }
        
        public UpdateSysCodeResponse(bool UpdateSysCodeResult, databases.baseDS.sysCodeDataTable sysCodeTbl) {
            this.UpdateSysCodeResult = UpdateSysCodeResult;
            this.sysCodeTbl = sysCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.stockCodeDataTable stockCodeTbl;
        
        public UpdateStockRequest() {
        }
        
        public UpdateStockRequest(databases.baseDS.stockCodeDataTable stockCodeTbl) {
            this.stockCodeTbl = stockCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateStockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.stockCodeDataTable stockCodeTbl;
        
        public UpdateStockResponse() {
        }
        
        public UpdateStockResponse(bool UpdateStockResult, databases.baseDS.stockCodeDataTable stockCodeTbl) {
            this.UpdateStockResult = UpdateStockResult;
            this.stockCodeTbl = stockCodeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestor", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.investorDataTable investorTbl;
        
        public UpdateInvestorRequest() {
        }
        
        public UpdateInvestorRequest(databases.baseDS.investorDataTable investorTbl) {
            this.investorTbl = investorTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateInvestorResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.investorDataTable investorTbl;
        
        public UpdateInvestorResponse() {
        }
        
        public UpdateInvestorResponse(bool UpdateInvestorResult, databases.baseDS.investorDataTable investorTbl) {
            this.UpdateInvestorResult = UpdateInvestorResult;
            this.investorTbl = investorTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolio", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.portfolioDataTable portfolioTbl;
        
        public UpdatePortfolioRequest() {
        }
        
        public UpdatePortfolioRequest(databases.baseDS.portfolioDataTable portfolioTbl) {
            this.portfolioTbl = portfolioTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePortfolioResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.portfolioDataTable portfolioTbl;
        
        public UpdatePortfolioResponse() {
        }
        
        public UpdatePortfolioResponse(bool UpdatePortfolioResult, databases.baseDS.portfolioDataTable portfolioTbl) {
            this.UpdatePortfolioResult = UpdatePortfolioResult;
            this.portfolioTbl = portfolioTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.portfolioDetailDataTable portfolioDetailTbl;
        
        public UpdatePortfolioDetailRequest() {
        }
        
        public UpdatePortfolioDetailRequest(databases.baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            this.portfolioDetailTbl = portfolioDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdatePortfolioDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdatePortfolioDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdatePortfolioDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.portfolioDetailDataTable portfolioDetailTbl;
        
        public UpdatePortfolioDetailResponse() {
        }
        
        public UpdatePortfolioDetailResponse(bool UpdatePortfolioDetailResult, databases.baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            this.UpdatePortfolioDetailResult = UpdatePortfolioDetailResult;
            this.portfolioDetailTbl = portfolioDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockExchange", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockExchangeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.stockExchangeDataTable stockExchangeTbl;
        
        public UpdateStockExchangeRequest() {
        }
        
        public UpdateStockExchangeRequest(databases.baseDS.stockExchangeDataTable stockExchangeTbl) {
            this.stockExchangeTbl = stockExchangeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateStockExchangeResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateStockExchangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateStockExchangeResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.stockExchangeDataTable stockExchangeTbl;
        
        public UpdateStockExchangeResponse() {
        }
        
        public UpdateStockExchangeResponse(bool UpdateStockExchangeResult, databases.baseDS.stockExchangeDataTable stockExchangeTbl) {
            this.UpdateStockExchangeResult = UpdateStockExchangeResult;
            this.stockExchangeTbl = stockExchangeTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExchangeDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateExchangeDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.exchangeDetailDataTable exchangeDetailTbl;
        
        public UpdateExchangeDetailRequest() {
        }
        
        public UpdateExchangeDetailRequest(databases.baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            this.exchangeDetailTbl = exchangeDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateExchangeDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateExchangeDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateExchangeDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.exchangeDetailDataTable exchangeDetailTbl;
        
        public UpdateExchangeDetailResponse() {
        }
        
        public UpdateExchangeDetailResponse(bool UpdateExchangeDetailResult, databases.baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            this.UpdateExchangeDetailResult = UpdateExchangeDetailResult;
            this.exchangeDetailTbl = exchangeDetailTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactions", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTransactionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.transactionsDataTable transactionsTbl;
        
        public UpdateTransactionsRequest() {
        }
        
        public UpdateTransactionsRequest(databases.baseDS.transactionsDataTable transactionsTbl) {
            this.transactionsTbl = transactionsTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTransactionsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTransactionsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateTransactionsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.transactionsDataTable transactionsTbl;
        
        public UpdateTransactionsResponse() {
        }
        
        public UpdateTransactionsResponse(bool UpdateTransactionsResult, databases.baseDS.transactionsDataTable transactionsTbl) {
            this.UpdateTransactionsResult = UpdateTransactionsResult;
            this.transactionsTbl = transactionsTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorStock", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorStockRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.investorStockDataTable investorStockTbl;
        
        public UpdateInvestorStockRequest() {
        }
        
        public UpdateInvestorStockRequest(databases.baseDS.investorStockDataTable investorStockTbl) {
            this.investorStockTbl = investorStockTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateInvestorStockResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateInvestorStockResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateInvestorStockResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.investorStockDataTable investorStockTbl;
        
        public UpdateInvestorStockResponse() {
        }
        
        public UpdateInvestorStockResponse(bool UpdateInvestorStockResult, databases.baseDS.investorStockDataTable investorStockTbl) {
            this.UpdateInvestorStockResult = UpdateInvestorStockResult;
            this.investorStockTbl = investorStockTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeAlert", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeAlertRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.tradeAlertDataTable tradeAlertTbl;
        
        public UpdateTradeAlertRequest() {
        }
        
        public UpdateTradeAlertRequest(databases.baseDS.tradeAlertDataTable tradeAlertTbl) {
            this.tradeAlertTbl = tradeAlertTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateTradeAlertResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateTradeAlertResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateTradeAlertResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.tradeAlertDataTable tradeAlertTbl;
        
        public UpdateTradeAlertResponse() {
        }
        
        public UpdateTradeAlertResponse(bool UpdateTradeAlertResult, databases.baseDS.tradeAlertDataTable tradeAlertTbl) {
            this.UpdateTradeAlertResult = UpdateTradeAlertResult;
            this.tradeAlertTbl = tradeAlertTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysAutoKeyPending", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysAutoKeyPendingRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl;
        
        public UpdateSysAutoKeyPendingRequest() {
        }
        
        public UpdateSysAutoKeyPendingRequest(databases.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            this.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateSysAutoKeyPendingResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UpdateSysAutoKeyPendingResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool UpdateSysAutoKeyPendingResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl;
        
        public UpdateSysAutoKeyPendingResponse() {
        }
        
        public UpdateSysAutoKeyPendingResponse(bool UpdateSysAutoKeyPendingResult, databases.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            this.UpdateSysAutoKeyPendingResult = UpdateSysAutoKeyPendingResult;
            this.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransactionInfoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonClass.TransactionInfo transInfo;
        
        public GetTransactionInfoRequest() {
        }
        
        public GetTransactionInfoRequest(commonClass.TransactionInfo transInfo) {
            this.transInfo = transInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTransactionInfoResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTransactionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool GetTransactionInfoResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public commonClass.TransactionInfo transInfo;
        
        public GetTransactionInfoResponse() {
        }
        
        public GetTransactionInfoResponse(bool GetTransactionInfoResult, commonClass.TransactionInfo transInfo) {
            this.GetTransactionInfoResult = GetTransactionInfoResult;
            this.transInfo = transInfo;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data_ByKey", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_Data_ByKeyRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string dataKey;
        
        public GetAnalysis_Data_ByKeyRequest() {
        }
        
        public GetAnalysis_Data_ByKeyRequest(string dataKey) {
            this.dataKey = dataKey;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data_ByKeyResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_Data_ByKeyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.priceDataDataTable GetAnalysis_Data_ByKeyResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int firstData;
        
        public GetAnalysis_Data_ByKeyResponse() {
        }
        
        public GetAnalysis_Data_ByKeyResponse(databases.baseDS.priceDataDataTable GetAnalysis_Data_ByKeyResult, int firstData) {
            this.GetAnalysis_Data_ByKeyResult = GetAnalysis_Data_ByKeyResult;
            this.firstData = firstData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_Data", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_DataRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public commonClass.DataParams dataParam;
        
        public GetAnalysis_DataRequest() {
        }
        
        public GetAnalysis_DataRequest(string stockCode, commonClass.DataParams dataParam) {
            this.stockCode = stockCode;
            this.dataParam = dataParam;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAnalysis_DataResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAnalysis_DataResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.priceDataDataTable GetAnalysis_DataResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int firstData;
        
        public GetAnalysis_DataResponse() {
        }
        
        public GetAnalysis_DataResponse(databases.baseDS.priceDataDataTable GetAnalysis_DataResult, int firstData) {
            this.GetAnalysis_DataResult = GetAnalysis_DataResult;
            this.firstData = firstData;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeTransaction", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeTransactionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonTypes.AppTypes.TradeActions type;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string portfolioCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int qty;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public decimal feePerc;
        
        public MakeTransactionRequest() {
        }
        
        public MakeTransactionRequest(commonTypes.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc) {
            this.type = type;
            this.stockCode = stockCode;
            this.portfolioCode = portfolioCode;
            this.qty = qty;
            this.feePerc = feePerc;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MakeTransactionResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class MakeTransactionResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public databases.baseDS.transactionsDataTable MakeTransactionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string errorText;
        
        public MakeTransactionResponse() {
        }
        
        public MakeTransactionResponse(databases.baseDS.transactionsDataTable MakeTransactionResult, string errorText) {
            this.MakeTransactionResult = MakeTransactionResult;
            this.errorText = errorText;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradePointWithEstimationDetail", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradePointWithEstimationDetailRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonClass.DataParams dataParam;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string stockCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string strategyCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public commonClass.EstimateOptions options;
        
        public GetTradePointWithEstimationDetailRequest() {
        }
        
        public GetTradePointWithEstimationDetailRequest(commonClass.DataParams dataParam, string stockCode, string strategyCode, commonClass.EstimateOptions options) {
            this.dataParam = dataParam;
            this.stockCode = stockCode;
            this.strategyCode = strategyCode;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTradePointWithEstimationDetailResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTradePointWithEstimationDetailResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonClass.TradePointInfo[] GetTradePointWithEstimationDetailResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public databases.tmpDS.tradeEstimateDataTable toTbl;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public application.StrategyStatistics statistics;
        
        public GetTradePointWithEstimationDetailResponse() {
        }
        
        public GetTradePointWithEstimationDetailResponse(commonClass.TradePointInfo[] GetTradePointWithEstimationDetailResult, databases.tmpDS.tradeEstimateDataTable toTbl, application.StrategyStatistics statistics) {
            this.GetTradePointWithEstimationDetailResult = GetTradePointWithEstimationDetailResult;
            this.toTbl = toTbl;
            this.statistics = statistics;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Load_Global_Settings", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Load_Global_SettingsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonTypes.GlobalSettings settings;
        
        public Load_Global_SettingsRequest() {
        }
        
        public Load_Global_SettingsRequest(commonTypes.GlobalSettings settings) {
            this.settings = settings;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Load_Global_SettingsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class Load_Global_SettingsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public commonTypes.GlobalSettings settings;
        
        public Load_Global_SettingsResponse() {
        }
        
        public Load_Global_SettingsResponse(commonTypes.GlobalSettings settings) {
            this.settings = settings;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockServiceChannel : DataAccess.ServiceReference1.IStockService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockServiceClient : System.ServiceModel.ClientBase<DataAccess.ServiceReference1.IStockService>, DataAccess.ServiceReference1.IStockService {
        
        public StockServiceClient() {
        }
        
        public StockServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Reset() {
            base.Channel.Reset();
        }
        
        public System.Threading.Tasks.Task ResetAsync() {
            return base.Channel.ResetAsync();
        }
        
        public void ClearCache() {
            base.Channel.ClearCache();
        }
        
        public System.Threading.Tasks.Task ClearCacheAsync() {
            return base.Channel.ClearCacheAsync();
        }
        
        public void DeleteCache(string cacheName) {
            base.Channel.DeleteCache(cacheName);
        }
        
        public System.Threading.Tasks.Task DeleteCacheAsync(string cacheName) {
            return base.Channel.DeleteCacheAsync(cacheName);
        }
        
        public System.DateTime GetServerDateTime() {
            return base.Channel.GetServerDateTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetServerDateTimeAsync() {
            return base.Channel.GetServerDateTimeAsync();
        }
        
        public bool IsWorking() {
            return base.Channel.IsWorking();
        }
        
        public System.Threading.Tasks.Task<bool> IsWorkingAsync() {
            return base.Channel.IsWorkingAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateMessageResponse DataAccess.ServiceReference1.IStockService.UpdateMessage(DataAccess.ServiceReference1.UpdateMessageRequest request) {
            return base.Channel.UpdateMessage(request);
        }
        
        public bool UpdateMessage(ref databases.baseDS.messagesDataTable messageTbl) {
            DataAccess.ServiceReference1.UpdateMessageRequest inValue = new DataAccess.ServiceReference1.UpdateMessageRequest();
            inValue.messageTbl = messageTbl;
            DataAccess.ServiceReference1.UpdateMessageResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateMessage(inValue);
            messageTbl = retVal.messageTbl;
            return retVal.UpdateMessageResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateMessageResponse> UpdateMessageAsync(DataAccess.ServiceReference1.UpdateMessageRequest request) {
            return base.Channel.UpdateMessageAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdatePriceDataResponse DataAccess.ServiceReference1.IStockService.UpdatePriceData(DataAccess.ServiceReference1.UpdatePriceDataRequest request) {
            return base.Channel.UpdatePriceData(request);
        }
        
        public bool UpdatePriceData(ref databases.baseDS.priceDataDataTable priceDataTbl) {
            DataAccess.ServiceReference1.UpdatePriceDataRequest inValue = new DataAccess.ServiceReference1.UpdatePriceDataRequest();
            inValue.priceDataTbl = priceDataTbl;
            DataAccess.ServiceReference1.UpdatePriceDataResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdatePriceData(inValue);
            priceDataTbl = retVal.priceDataTbl;
            return retVal.UpdatePriceDataResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePriceDataResponse> UpdatePriceDataAsync(DataAccess.ServiceReference1.UpdatePriceDataRequest request) {
            return base.Channel.UpdatePriceDataAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateSysCodeCatResponse DataAccess.ServiceReference1.IStockService.UpdateSysCodeCat(DataAccess.ServiceReference1.UpdateSysCodeCatRequest request) {
            return base.Channel.UpdateSysCodeCat(request);
        }
        
        public bool UpdateSysCodeCat(ref databases.baseDS.sysCodeCatDataTable sysCodeCatTbl) {
            DataAccess.ServiceReference1.UpdateSysCodeCatRequest inValue = new DataAccess.ServiceReference1.UpdateSysCodeCatRequest();
            inValue.sysCodeCatTbl = sysCodeCatTbl;
            DataAccess.ServiceReference1.UpdateSysCodeCatResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateSysCodeCat(inValue);
            sysCodeCatTbl = retVal.sysCodeCatTbl;
            return retVal.UpdateSysCodeCatResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysCodeCatResponse> UpdateSysCodeCatAsync(DataAccess.ServiceReference1.UpdateSysCodeCatRequest request) {
            return base.Channel.UpdateSysCodeCatAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateSysCodeResponse DataAccess.ServiceReference1.IStockService.UpdateSysCode(DataAccess.ServiceReference1.UpdateSysCodeRequest request) {
            return base.Channel.UpdateSysCode(request);
        }
        
        public bool UpdateSysCode(ref databases.baseDS.sysCodeDataTable sysCodeTbl) {
            DataAccess.ServiceReference1.UpdateSysCodeRequest inValue = new DataAccess.ServiceReference1.UpdateSysCodeRequest();
            inValue.sysCodeTbl = sysCodeTbl;
            DataAccess.ServiceReference1.UpdateSysCodeResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateSysCode(inValue);
            sysCodeTbl = retVal.sysCodeTbl;
            return retVal.UpdateSysCodeResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysCodeResponse> UpdateSysCodeAsync(DataAccess.ServiceReference1.UpdateSysCodeRequest request) {
            return base.Channel.UpdateSysCodeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateStockResponse DataAccess.ServiceReference1.IStockService.UpdateStock(DataAccess.ServiceReference1.UpdateStockRequest request) {
            return base.Channel.UpdateStock(request);
        }
        
        public bool UpdateStock(ref databases.baseDS.stockCodeDataTable stockCodeTbl) {
            DataAccess.ServiceReference1.UpdateStockRequest inValue = new DataAccess.ServiceReference1.UpdateStockRequest();
            inValue.stockCodeTbl = stockCodeTbl;
            DataAccess.ServiceReference1.UpdateStockResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateStock(inValue);
            stockCodeTbl = retVal.stockCodeTbl;
            return retVal.UpdateStockResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateStockResponse> UpdateStockAsync(DataAccess.ServiceReference1.UpdateStockRequest request) {
            return base.Channel.UpdateStockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateInvestorResponse DataAccess.ServiceReference1.IStockService.UpdateInvestor(DataAccess.ServiceReference1.UpdateInvestorRequest request) {
            return base.Channel.UpdateInvestor(request);
        }
        
        public bool UpdateInvestor(ref databases.baseDS.investorDataTable investorTbl) {
            DataAccess.ServiceReference1.UpdateInvestorRequest inValue = new DataAccess.ServiceReference1.UpdateInvestorRequest();
            inValue.investorTbl = investorTbl;
            DataAccess.ServiceReference1.UpdateInvestorResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateInvestor(inValue);
            investorTbl = retVal.investorTbl;
            return retVal.UpdateInvestorResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateInvestorResponse> UpdateInvestorAsync(DataAccess.ServiceReference1.UpdateInvestorRequest request) {
            return base.Channel.UpdateInvestorAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdatePortfolioResponse DataAccess.ServiceReference1.IStockService.UpdatePortfolio(DataAccess.ServiceReference1.UpdatePortfolioRequest request) {
            return base.Channel.UpdatePortfolio(request);
        }
        
        public bool UpdatePortfolio(ref databases.baseDS.portfolioDataTable portfolioTbl) {
            DataAccess.ServiceReference1.UpdatePortfolioRequest inValue = new DataAccess.ServiceReference1.UpdatePortfolioRequest();
            inValue.portfolioTbl = portfolioTbl;
            DataAccess.ServiceReference1.UpdatePortfolioResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdatePortfolio(inValue);
            portfolioTbl = retVal.portfolioTbl;
            return retVal.UpdatePortfolioResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePortfolioResponse> UpdatePortfolioAsync(DataAccess.ServiceReference1.UpdatePortfolioRequest request) {
            return base.Channel.UpdatePortfolioAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdatePortfolioDetailResponse DataAccess.ServiceReference1.IStockService.UpdatePortfolioDetail(DataAccess.ServiceReference1.UpdatePortfolioDetailRequest request) {
            return base.Channel.UpdatePortfolioDetail(request);
        }
        
        public bool UpdatePortfolioDetail(ref databases.baseDS.portfolioDetailDataTable portfolioDetailTbl) {
            DataAccess.ServiceReference1.UpdatePortfolioDetailRequest inValue = new DataAccess.ServiceReference1.UpdatePortfolioDetailRequest();
            inValue.portfolioDetailTbl = portfolioDetailTbl;
            DataAccess.ServiceReference1.UpdatePortfolioDetailResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdatePortfolioDetail(inValue);
            portfolioDetailTbl = retVal.portfolioDetailTbl;
            return retVal.UpdatePortfolioDetailResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdatePortfolioDetailResponse> UpdatePortfolioDetailAsync(DataAccess.ServiceReference1.UpdatePortfolioDetailRequest request) {
            return base.Channel.UpdatePortfolioDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateStockExchangeResponse DataAccess.ServiceReference1.IStockService.UpdateStockExchange(DataAccess.ServiceReference1.UpdateStockExchangeRequest request) {
            return base.Channel.UpdateStockExchange(request);
        }
        
        public bool UpdateStockExchange(ref databases.baseDS.stockExchangeDataTable stockExchangeTbl) {
            DataAccess.ServiceReference1.UpdateStockExchangeRequest inValue = new DataAccess.ServiceReference1.UpdateStockExchangeRequest();
            inValue.stockExchangeTbl = stockExchangeTbl;
            DataAccess.ServiceReference1.UpdateStockExchangeResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateStockExchange(inValue);
            stockExchangeTbl = retVal.stockExchangeTbl;
            return retVal.UpdateStockExchangeResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateStockExchangeResponse> UpdateStockExchangeAsync(DataAccess.ServiceReference1.UpdateStockExchangeRequest request) {
            return base.Channel.UpdateStockExchangeAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateExchangeDetailResponse DataAccess.ServiceReference1.IStockService.UpdateExchangeDetail(DataAccess.ServiceReference1.UpdateExchangeDetailRequest request) {
            return base.Channel.UpdateExchangeDetail(request);
        }
        
        public bool UpdateExchangeDetail(ref databases.baseDS.exchangeDetailDataTable exchangeDetailTbl) {
            DataAccess.ServiceReference1.UpdateExchangeDetailRequest inValue = new DataAccess.ServiceReference1.UpdateExchangeDetailRequest();
            inValue.exchangeDetailTbl = exchangeDetailTbl;
            DataAccess.ServiceReference1.UpdateExchangeDetailResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateExchangeDetail(inValue);
            exchangeDetailTbl = retVal.exchangeDetailTbl;
            return retVal.UpdateExchangeDetailResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateExchangeDetailResponse> UpdateExchangeDetailAsync(DataAccess.ServiceReference1.UpdateExchangeDetailRequest request) {
            return base.Channel.UpdateExchangeDetailAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateTransactionsResponse DataAccess.ServiceReference1.IStockService.UpdateTransactions(DataAccess.ServiceReference1.UpdateTransactionsRequest request) {
            return base.Channel.UpdateTransactions(request);
        }
        
        public bool UpdateTransactions(ref databases.baseDS.transactionsDataTable transactionsTbl) {
            DataAccess.ServiceReference1.UpdateTransactionsRequest inValue = new DataAccess.ServiceReference1.UpdateTransactionsRequest();
            inValue.transactionsTbl = transactionsTbl;
            DataAccess.ServiceReference1.UpdateTransactionsResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateTransactions(inValue);
            transactionsTbl = retVal.transactionsTbl;
            return retVal.UpdateTransactionsResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateTransactionsResponse> UpdateTransactionsAsync(DataAccess.ServiceReference1.UpdateTransactionsRequest request) {
            return base.Channel.UpdateTransactionsAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateInvestorStockResponse DataAccess.ServiceReference1.IStockService.UpdateInvestorStock(DataAccess.ServiceReference1.UpdateInvestorStockRequest request) {
            return base.Channel.UpdateInvestorStock(request);
        }
        
        public bool UpdateInvestorStock(ref databases.baseDS.investorStockDataTable investorStockTbl) {
            DataAccess.ServiceReference1.UpdateInvestorStockRequest inValue = new DataAccess.ServiceReference1.UpdateInvestorStockRequest();
            inValue.investorStockTbl = investorStockTbl;
            DataAccess.ServiceReference1.UpdateInvestorStockResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateInvestorStock(inValue);
            investorStockTbl = retVal.investorStockTbl;
            return retVal.UpdateInvestorStockResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateInvestorStockResponse> UpdateInvestorStockAsync(DataAccess.ServiceReference1.UpdateInvestorStockRequest request) {
            return base.Channel.UpdateInvestorStockAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateTradeAlertResponse DataAccess.ServiceReference1.IStockService.UpdateTradeAlert(DataAccess.ServiceReference1.UpdateTradeAlertRequest request) {
            return base.Channel.UpdateTradeAlert(request);
        }
        
        public bool UpdateTradeAlert(ref databases.baseDS.tradeAlertDataTable tradeAlertTbl) {
            DataAccess.ServiceReference1.UpdateTradeAlertRequest inValue = new DataAccess.ServiceReference1.UpdateTradeAlertRequest();
            inValue.tradeAlertTbl = tradeAlertTbl;
            DataAccess.ServiceReference1.UpdateTradeAlertResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateTradeAlert(inValue);
            tradeAlertTbl = retVal.tradeAlertTbl;
            return retVal.UpdateTradeAlertResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateTradeAlertResponse> UpdateTradeAlertAsync(DataAccess.ServiceReference1.UpdateTradeAlertRequest request) {
            return base.Channel.UpdateTradeAlertAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.UpdateSysAutoKeyPendingResponse DataAccess.ServiceReference1.IStockService.UpdateSysAutoKeyPending(DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest request) {
            return base.Channel.UpdateSysAutoKeyPending(request);
        }
        
        public bool UpdateSysAutoKeyPending(ref databases.baseDS.sysAutoKeyPendingDataTable sysAutoKeyPendingTbl) {
            DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest inValue = new DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest();
            inValue.sysAutoKeyPendingTbl = sysAutoKeyPendingTbl;
            DataAccess.ServiceReference1.UpdateSysAutoKeyPendingResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).UpdateSysAutoKeyPending(inValue);
            sysAutoKeyPendingTbl = retVal.sysAutoKeyPendingTbl;
            return retVal.UpdateSysAutoKeyPendingResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.UpdateSysAutoKeyPendingResponse> UpdateSysAutoKeyPendingAsync(DataAccess.ServiceReference1.UpdateSysAutoKeyPendingRequest request) {
            return base.Channel.UpdateSysAutoKeyPendingAsync(request);
        }
        
        public void DeleteStock(string stockCode) {
            base.Channel.DeleteStock(stockCode);
        }
        
        public System.Threading.Tasks.Task DeleteStockAsync(string stockCode) {
            return base.Channel.DeleteStockAsync(stockCode);
        }
        
        public void DeleteStockExchange(string code) {
            base.Channel.DeleteStockExchange(code);
        }
        
        public System.Threading.Tasks.Task DeleteStockExchangeAsync(string code) {
            return base.Channel.DeleteStockExchangeAsync(code);
        }
        
        public void DeleteInvestor(string investorCode) {
            base.Channel.DeleteInvestor(investorCode);
        }
        
        public System.Threading.Tasks.Task DeleteInvestorAsync(string investorCode) {
            return base.Channel.DeleteInvestorAsync(investorCode);
        }
        
        public void DeletePortfolio(string portfolioCode) {
            base.Channel.DeletePortfolio(portfolioCode);
        }
        
        public System.Threading.Tasks.Task DeletePortfolioAsync(string portfolioCode) {
            return base.Channel.DeletePortfolioAsync(portfolioCode);
        }
        
        public void DeleteSysCodeCat(string catCode) {
            base.Channel.DeleteSysCodeCat(catCode);
        }
        
        public System.Threading.Tasks.Task DeleteSysCodeCatAsync(string catCode) {
            return base.Channel.DeleteSysCodeCatAsync(catCode);
        }
        
        public void DeleteSysCode(string catCode, string code) {
            base.Channel.DeleteSysCode(catCode, code);
        }
        
        public System.Threading.Tasks.Task DeleteSysCodeAsync(string catCode, string code) {
            return base.Channel.DeleteSysCodeAsync(catCode, code);
        }
        
        public void DeleteTradeAlert(int alertId) {
            base.Channel.DeleteTradeAlert(alertId);
        }
        
        public System.Threading.Tasks.Task DeleteTradeAlertAsync(int alertId) {
            return base.Channel.DeleteTradeAlertAsync(alertId);
        }
        
        public databases.tmpDS.stockCodeDataTable GetStockByStatus(commonTypes.AppTypes.CommonStatus status) {
            return base.Channel.GetStockByStatus(status);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStockByStatusAsync(commonTypes.AppTypes.CommonStatus status) {
            return base.Channel.GetStockByStatusAsync(status);
        }
        
        public databases.tmpDS.investorDataTable GetInvestorShortList() {
            return base.Channel.GetInvestorShortList();
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.investorDataTable> GetInvestorShortListAsync() {
            return base.Channel.GetInvestorShortListAsync();
        }
        
        public databases.baseDS.sysLogDataTable GetSyslog_ByDate(System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetSyslog_ByDate(frDate, toDate);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.sysLogDataTable> GetSyslog_ByDateAsync(System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetSyslog_ByDateAsync(frDate, toDate);
        }
        
        public databases.baseDS.sysLogDataTable GetSyslog_BySQL(string sql) {
            return base.Channel.GetSyslog_BySQL(sql);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.sysLogDataTable> GetSyslog_BySQLAsync(string sql) {
            return base.Channel.GetSyslog_BySQLAsync(sql);
        }
        
        public databases.baseDS.stockCodeDataTable GetStockFull() {
            return base.Channel.GetStockFull();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.stockCodeDataTable> GetStockFullAsync() {
            return base.Channel.GetStockFullAsync();
        }
        
        public string[] GetStockList_ByWatchList(string[] watchList) {
            return base.Channel.GetStockList_ByWatchList(watchList);
        }
        
        public System.Threading.Tasks.Task<string[]> GetStockList_ByWatchListAsync(string[] watchList) {
            return base.Channel.GetStockList_ByWatchListAsync(watchList);
        }
        
        public string[] GetStockList_ByBizSector(string[] sectors) {
            return base.Channel.GetStockList_ByBizSector(sectors);
        }
        
        public System.Threading.Tasks.Task<string[]> GetStockList_ByBizSectorAsync(string[] sectors) {
            return base.Channel.GetStockList_ByBizSectorAsync(sectors);
        }
        
        public databases.baseDS.stockExchangeDataTable GetStockExchange() {
            return base.Channel.GetStockExchange();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.stockExchangeDataTable> GetStockExchangeAsync() {
            return base.Channel.GetStockExchangeAsync();
        }
        
        public databases.baseDS.exchangeDetailDataTable GetExchangeDetail(string marketCode) {
            return base.Channel.GetExchangeDetail(marketCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.exchangeDetailDataTable> GetExchangeDetailAsync(string marketCode) {
            return base.Channel.GetExchangeDetailAsync(marketCode);
        }
        
        public databases.baseDS.employeeRangeDataTable GetEmployeeRange() {
            return base.Channel.GetEmployeeRange();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.employeeRangeDataTable> GetEmployeeRangeAsync() {
            return base.Channel.GetEmployeeRangeAsync();
        }
        
        public databases.baseDS.bizIndustryDataTable GetBizIndustry() {
            return base.Channel.GetBizIndustry();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizIndustryDataTable> GetBizIndustryAsync() {
            return base.Channel.GetBizIndustryAsync();
        }
        
        public databases.baseDS.bizSuperSectorDataTable GetBizSuperSector() {
            return base.Channel.GetBizSuperSector();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSuperSectorDataTable> GetBizSuperSectorAsync() {
            return base.Channel.GetBizSuperSectorAsync();
        }
        
        public databases.baseDS.bizSectorDataTable GetBizSector() {
            return base.Channel.GetBizSector();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSectorDataTable> GetBizSectorAsync() {
            return base.Channel.GetBizSectorAsync();
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSector() {
            return base.Channel.GetBizSubSector();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorAsync() {
            return base.Channel.GetBizSubSectorAsync();
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSectorByIndustry(string industryCode) {
            return base.Channel.GetBizSubSectorByIndustry(industryCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorByIndustryAsync(string industryCode) {
            return base.Channel.GetBizSubSectorByIndustryAsync(industryCode);
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSectorBySuperSector(string superSectorCode) {
            return base.Channel.GetBizSubSectorBySuperSector(superSectorCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorBySuperSectorAsync(string superSectorCode) {
            return base.Channel.GetBizSubSectorBySuperSectorAsync(superSectorCode);
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSectorBySector(string sectorCode) {
            return base.Channel.GetBizSubSectorBySector(sectorCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSectorBySectorAsync(string sectorCode) {
            return base.Channel.GetBizSubSectorBySectorAsync(sectorCode);
        }
        
        public databases.baseDS.feedbackCatDataTable GetFeedbackCat(string cultureCode) {
            return base.Channel.GetFeedbackCat(cultureCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.feedbackCatDataTable> GetFeedbackCatAsync(string cultureCode) {
            return base.Channel.GetFeedbackCatAsync(cultureCode);
        }
        
        public databases.baseDS.countryDataTable GetCountry() {
            return base.Channel.GetCountry();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.countryDataTable> GetCountryAsync() {
            return base.Channel.GetCountryAsync();
        }
        
        public databases.baseDS.currencyDataTable GetCurrency() {
            return base.Channel.GetCurrency();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.currencyDataTable> GetCurrencyAsync() {
            return base.Channel.GetCurrencyAsync();
        }
        
        public databases.baseDS.investorCatDataTable GetInvestorCat() {
            return base.Channel.GetInvestorCat();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorCatDataTable> GetInvestorCatAsync() {
            return base.Channel.GetInvestorCatAsync();
        }
        
        public databases.baseDS.sysCodeDataTable GetSysCode(string catCode) {
            return base.Channel.GetSysCode(catCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.sysCodeDataTable> GetSysCodeAsync(string catCode) {
            return base.Channel.GetSysCodeAsync(catCode);
        }
        
        public databases.baseDS.sysCodeCatDataTable GetSysCodeCat() {
            return base.Channel.GetSysCodeCat();
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.sysCodeCatDataTable> GetSysCodeCatAsync() {
            return base.Channel.GetSysCodeCatAsync();
        }
        
        public databases.baseDS.investorDataTable GetInvestor_ByAccount(string account) {
            return base.Channel.GetInvestor_ByAccount(account);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByAccountAsync(string account) {
            return base.Channel.GetInvestor_ByAccountAsync(account);
        }
        
        public databases.baseDS.investorDataTable GetInvestor_ByCode(string code) {
            return base.Channel.GetInvestor_ByCode(code);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByCodeAsync(string code) {
            return base.Channel.GetInvestor_ByCodeAsync(code);
        }
        
        public databases.baseDS.investorDataTable GetInvestor_ByEmail(string email) {
            return base.Channel.GetInvestor_ByEmail(email);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_ByEmailAsync(string email) {
            return base.Channel.GetInvestor_ByEmailAsync(email);
        }
        
        public databases.baseDS.investorDataTable GetInvestor_BySQL(string sql) {
            return base.Channel.GetInvestor_BySQL(sql);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorDataTable> GetInvestor_BySQLAsync(string sql) {
            return base.Channel.GetInvestor_BySQLAsync(sql);
        }
        
        public databases.tmpDS.stockCodeDataTable GetStock_InPortfolio(string[] portfolios) {
            return base.Channel.GetStock_InPortfolio(portfolios);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStock_InPortfolioAsync(string[] portfolios) {
            return base.Channel.GetStock_InPortfolioAsync(portfolios);
        }
        
        public databases.tmpDS.stockCodeDataTable GetStock_ByBizSector(string[] bizSector) {
            return base.Channel.GetStock_ByBizSector(bizSector);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.stockCodeDataTable> GetStock_ByBizSectorAsync(string[] bizSector) {
            return base.Channel.GetStock_ByBizSectorAsync(bizSector);
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSector_ByIndustry(string code) {
            return base.Channel.GetBizSubSector_ByIndustry(code);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_ByIndustryAsync(string code) {
            return base.Channel.GetBizSubSector_ByIndustryAsync(code);
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSector_BySuperSector(string code) {
            return base.Channel.GetBizSubSector_BySuperSector(code);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_BySuperSectorAsync(string code) {
            return base.Channel.GetBizSubSector_BySuperSectorAsync(code);
        }
        
        public databases.baseDS.bizSubSectorDataTable GetBizSubSector_BySector(string code) {
            return base.Channel.GetBizSubSector_BySector(code);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.bizSubSectorDataTable> GetBizSubSector_BySectorAsync(string code) {
            return base.Channel.GetBizSubSector_BySectorAsync(code);
        }
        
        public databases.baseDS.portfolioDataTable GetPortfolio_ByInvestorAndType(string investorCode, commonTypes.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByInvestorAndType(investorCode, type);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByInvestorAndTypeAsync(string investorCode, commonTypes.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByInvestorAndTypeAsync(investorCode, type);
        }
        
        public databases.baseDS.portfolioDataTable GetPortfolio_ByType(commonTypes.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByType(type);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByTypeAsync(commonTypes.AppTypes.PortfolioTypes type) {
            return base.Channel.GetPortfolio_ByTypeAsync(type);
        }
        
        public databases.baseDS.portfolioDataTable GetPortfolio_ByCode(string portfolioCode) {
            return base.Channel.GetPortfolio_ByCode(portfolioCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByCodeAsync(string portfolioCode) {
            return base.Channel.GetPortfolio_ByCodeAsync(portfolioCode);
        }
        
        public databases.baseDS.portfolioDataTable GetPortfolio_ByInvestor(string investorCode) {
            return base.Channel.GetPortfolio_ByInvestor(investorCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDataTable> GetPortfolio_ByInvestorAsync(string investorCode) {
            return base.Channel.GetPortfolio_ByInvestorAsync(investorCode);
        }
        
        public databases.baseDS.tradeAlertDataTable GetTradeAlert(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask) {
            return base.Channel.GetTradeAlert(frDate, toDate, investor, statusMask);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.tradeAlertDataTable> GetTradeAlertAsync(System.DateTime frDate, System.DateTime toDate, string investor, byte statusMask) {
            return base.Channel.GetTradeAlertAsync(frDate, toDate, investor, statusMask);
        }
        
        public databases.baseDS.tradeAlertDataTable GetTradeAlert_BySQL(string alertSql) {
            return base.Channel.GetTradeAlert_BySQL(alertSql);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.tradeAlertDataTable> GetTradeAlert_BySQLAsync(string alertSql) {
            return base.Channel.GetTradeAlert_BySQLAsync(alertSql);
        }
        
        public databases.baseDS.transactionsDataTable GetTransaction_BySQL(string transSql) {
            return base.Channel.GetTransaction_BySQL(transSql);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.transactionsDataTable> GetTransaction_BySQLAsync(string transSql) {
            return base.Channel.GetTransaction_BySQLAsync(transSql);
        }
        
        public databases.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByType(commonTypes.AppTypes.PortfolioTypes[] types) {
            return base.Channel.GetPortfolioDetail_ByType(types);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDetailDataTable> GetPortfolioDetail_ByTypeAsync(commonTypes.AppTypes.PortfolioTypes[] types) {
            return base.Channel.GetPortfolioDetail_ByTypeAsync(types);
        }
        
        public databases.baseDS.portfolioDetailDataTable GetPortfolioDetail_ByCode(string portfolioCode) {
            return base.Channel.GetPortfolioDetail_ByCode(portfolioCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.portfolioDetailDataTable> GetPortfolioDetail_ByCodeAsync(string portfolioCode) {
            return base.Channel.GetPortfolioDetail_ByCodeAsync(portfolioCode);
        }
        
        public databases.tmpDS.investorStockDataTable GetOwnedStockSum_ByInvestor(string investorCode) {
            return base.Channel.GetOwnedStockSum_ByInvestor(investorCode);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.investorStockDataTable> GetOwnedStockSum_ByInvestorAsync(string investorCode) {
            return base.Channel.GetOwnedStockSum_ByInvestorAsync(investorCode);
        }
        
        public databases.baseDS.investorStockDataTable GetOwnedStock_ByPortfolio(string portfolioCode) {
            return base.Channel.GetOwnedStock_ByPortfolio(portfolioCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.investorStockDataTable> GetOwnedStock_ByPortfolioAsync(string portfolioCode) {
            return base.Channel.GetOwnedStock_ByPortfolioAsync(portfolioCode);
        }
        
        public databases.baseDS.lastPriceDataDataTable GetLastPriceSum(commonTypes.AppTypes.PriceDataType type, string timeScaleCode) {
            return base.Channel.GetLastPriceSum(type, timeScaleCode);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.lastPriceDataDataTable> GetLastPriceSumAsync(commonTypes.AppTypes.PriceDataType type, string timeScaleCode) {
            return base.Channel.GetLastPriceSumAsync(type, timeScaleCode);
        }
        
        public databases.baseDS.priceDataDataTable GetPriceData(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetPriceData(stockCode, timeScaleCode, frDate, toDate);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetPriceDataAsync(string stockCode, string timeScaleCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetPriceDataAsync(stockCode, timeScaleCode, frDate, toDate);
        }
        
        public System.DateTime GetLastAlertTime(string investorCode) {
            return base.Channel.GetLastAlertTime(investorCode);
        }
        
        public System.Threading.Tasks.Task<System.DateTime> GetLastAlertTimeAsync(string investorCode) {
            return base.Channel.GetLastAlertTimeAsync(investorCode);
        }
        
        public databases.baseDS.priceDataDataTable GetData_ByTimeScale_Code_FrDate(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            return base.Channel.GetData_ByTimeScale_Code_FrDate(timeScaleCode, stockCode, fromDate);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetData_ByTimeScale_Code_FrDateAsync(string timeScaleCode, string stockCode, System.DateTime fromDate) {
            return base.Channel.GetData_ByTimeScale_Code_FrDateAsync(timeScaleCode, stockCode, fromDate);
        }
        
        public databases.baseDS.priceDataDataTable GetData_ByTimeScale_Code_DateRange(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_ByTimeScale_Code_DateRange(timeScaleCode, stockCode, frDate, toDate);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.priceDataDataTable> GetData_ByTimeScale_Code_DateRangeAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_ByTimeScale_Code_DateRangeAsync(timeScaleCode, stockCode, frDate, toDate);
        }
        
        public int GetData_TotalRow(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_TotalRow(timeScaleCode, stockCode, frDate, toDate);
        }
        
        public System.Threading.Tasks.Task<int> GetData_TotalRowAsync(string timeScaleCode, string stockCode, System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetData_TotalRowAsync(timeScaleCode, stockCode, frDate, toDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.GetTransactionInfoResponse DataAccess.ServiceReference1.IStockService.GetTransactionInfo(DataAccess.ServiceReference1.GetTransactionInfoRequest request) {
            return base.Channel.GetTransactionInfo(request);
        }
        
        public bool GetTransactionInfo(ref commonClass.TransactionInfo transInfo) {
            DataAccess.ServiceReference1.GetTransactionInfoRequest inValue = new DataAccess.ServiceReference1.GetTransactionInfoRequest();
            inValue.transInfo = transInfo;
            DataAccess.ServiceReference1.GetTransactionInfoResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).GetTransactionInfo(inValue);
            transInfo = retVal.transInfo;
            return retVal.GetTransactionInfoResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetTransactionInfoResponse> GetTransactionInfoAsync(DataAccess.ServiceReference1.GetTransactionInfoRequest request) {
            return base.Channel.GetTransactionInfoAsync(request);
        }
        
        public databases.baseDS.messagesDataTable GetMesssage_ByDate(System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetMesssage_ByDate(frDate, toDate);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.messagesDataTable> GetMesssage_ByDateAsync(System.DateTime frDate, System.DateTime toDate) {
            return base.Channel.GetMesssage_ByDateAsync(frDate, toDate);
        }
        
        public databases.baseDS.messagesDataTable GetMesssage_BySql(string sqlCmd2) {
            return base.Channel.GetMesssage_BySql(sqlCmd2);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.messagesDataTable> GetMesssage_BySqlAsync(string sqlCmd2) {
            return base.Channel.GetMesssage_BySqlAsync(sqlCmd2);
        }
        
        public string LoadAnalysisData(string code, commonClass.DataParams dataParam, bool forceReadNew) {
            return base.Channel.LoadAnalysisData(code, dataParam, forceReadNew);
        }
        
        public System.Threading.Tasks.Task<string> LoadAnalysisDataAsync(string code, commonClass.DataParams dataParam, bool forceReadNew) {
            return base.Channel.LoadAnalysisDataAsync(code, dataParam, forceReadNew);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyResponse DataAccess.ServiceReference1.IStockService.GetAnalysis_Data_ByKey(DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest request) {
            return base.Channel.GetAnalysis_Data_ByKey(request);
        }
        
        public databases.baseDS.priceDataDataTable GetAnalysis_Data_ByKey(string dataKey, out int firstData) {
            DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest inValue = new DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest();
            inValue.dataKey = dataKey;
            DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).GetAnalysis_Data_ByKey(inValue);
            firstData = retVal.firstData;
            return retVal.GetAnalysis_Data_ByKeyResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyResponse> GetAnalysis_Data_ByKeyAsync(DataAccess.ServiceReference1.GetAnalysis_Data_ByKeyRequest request) {
            return base.Channel.GetAnalysis_Data_ByKeyAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.GetAnalysis_DataResponse DataAccess.ServiceReference1.IStockService.GetAnalysis_Data(DataAccess.ServiceReference1.GetAnalysis_DataRequest request) {
            return base.Channel.GetAnalysis_Data(request);
        }
        
        public databases.baseDS.priceDataDataTable GetAnalysis_Data(string stockCode, commonClass.DataParams dataParam, out int firstData) {
            DataAccess.ServiceReference1.GetAnalysis_DataRequest inValue = new DataAccess.ServiceReference1.GetAnalysis_DataRequest();
            inValue.stockCode = stockCode;
            inValue.dataParam = dataParam;
            DataAccess.ServiceReference1.GetAnalysis_DataResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).GetAnalysis_Data(inValue);
            firstData = retVal.firstData;
            return retVal.GetAnalysis_DataResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetAnalysis_DataResponse> GetAnalysis_DataAsync(DataAccess.ServiceReference1.GetAnalysis_DataRequest request) {
            return base.Channel.GetAnalysis_DataAsync(request);
        }
        
        public commonClass.DataValues[] GetIndicatorData(string code, commonClass.DataParams dataParam, string metaName) {
            return base.Channel.GetIndicatorData(code, dataParam, metaName);
        }
        
        public System.Threading.Tasks.Task<commonClass.DataValues[]> GetIndicatorDataAsync(string code, commonClass.DataParams dataParam, string metaName) {
            return base.Channel.GetIndicatorDataAsync(code, dataParam, metaName);
        }
        
        public decimal[][] Estimate_Matrix_Profit(commonTypes.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option) {
            return base.Channel.Estimate_Matrix_Profit(timeRange, timeScaleCode, stockCodeList, strategyList, option);
        }
        
        public System.Threading.Tasks.Task<decimal[][]> Estimate_Matrix_ProfitAsync(commonTypes.AppTypes.TimeRanges timeRange, string timeScaleCode, string[] stockCodeList, string[] strategyList, commonClass.EstimateOptions option) {
            return base.Channel.Estimate_Matrix_ProfitAsync(timeRange, timeScaleCode, stockCodeList, strategyList, option);
        }
        
        public double[][] Estimate_Matrix_LastBizWeight(commonClass.DataParams dataParams, string[] stockCodeList, string[] strategyList) {
            return base.Channel.Estimate_Matrix_LastBizWeight(dataParams, stockCodeList, strategyList);
        }
        
        public System.Threading.Tasks.Task<double[][]> Estimate_Matrix_LastBizWeightAsync(commonClass.DataParams dataParams, string[] stockCodeList, string[] strategyList) {
            return base.Channel.Estimate_Matrix_LastBizWeightAsync(dataParams, stockCodeList, strategyList);
        }
        
        public commonClass.TradePointInfo[] Analysis(string dataKey, string strategyCode) {
            return base.Channel.Analysis(dataKey, strategyCode);
        }
        
        public System.Threading.Tasks.Task<commonClass.TradePointInfo[]> AnalysisAsync(string dataKey, string strategyCode) {
            return base.Channel.AnalysisAsync(dataKey, strategyCode);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.MakeTransactionResponse DataAccess.ServiceReference1.IStockService.MakeTransaction(DataAccess.ServiceReference1.MakeTransactionRequest request) {
            return base.Channel.MakeTransaction(request);
        }
        
        public databases.baseDS.transactionsDataTable MakeTransaction(commonTypes.AppTypes.TradeActions type, string stockCode, string portfolioCode, int qty, decimal feePerc, out string errorText) {
            DataAccess.ServiceReference1.MakeTransactionRequest inValue = new DataAccess.ServiceReference1.MakeTransactionRequest();
            inValue.type = type;
            inValue.stockCode = stockCode;
            inValue.portfolioCode = portfolioCode;
            inValue.qty = qty;
            inValue.feePerc = feePerc;
            DataAccess.ServiceReference1.MakeTransactionResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).MakeTransaction(inValue);
            errorText = retVal.errorText;
            return retVal.MakeTransactionResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.MakeTransactionResponse> MakeTransactionAsync(DataAccess.ServiceReference1.MakeTransactionRequest request) {
            return base.Channel.MakeTransactionAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.GetTradePointWithEstimationDetailResponse DataAccess.ServiceReference1.IStockService.GetTradePointWithEstimationDetail(DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest request) {
            return base.Channel.GetTradePointWithEstimationDetail(request);
        }
        
        public commonClass.TradePointInfo[] GetTradePointWithEstimationDetail(commonClass.DataParams dataParam, string stockCode, string strategyCode, commonClass.EstimateOptions options, out databases.tmpDS.tradeEstimateDataTable toTbl, out application.StrategyStatistics statistics) {
            DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest inValue = new DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest();
            inValue.dataParam = dataParam;
            inValue.stockCode = stockCode;
            inValue.strategyCode = strategyCode;
            inValue.options = options;
            DataAccess.ServiceReference1.GetTradePointWithEstimationDetailResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).GetTradePointWithEstimationDetail(inValue);
            toTbl = retVal.toTbl;
            statistics = retVal.statistics;
            return retVal.GetTradePointWithEstimationDetailResult;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.GetTradePointWithEstimationDetailResponse> GetTradePointWithEstimationDetailAsync(DataAccess.ServiceReference1.GetTradePointWithEstimationDetailRequest request) {
            return base.Channel.GetTradePointWithEstimationDetailAsync(request);
        }
        
        public databases.tmpDS.priceDiagnoseDataTable DiagnosePrice_CloseAndNextOpen(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision) {
            return base.Channel.DiagnosePrice_CloseAndNextOpen(frDate, toDate, timeScaleCode, exchangeCode, code, variantPerc, variance, precision);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.priceDiagnoseDataTable> DiagnosePrice_CloseAndNextOpenAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string exchangeCode, string code, double variantPerc, double variance, byte precision) {
            return base.Channel.DiagnosePrice_CloseAndNextOpenAsync(frDate, toDate, timeScaleCode, exchangeCode, code, variantPerc, variance, precision);
        }
        
        public void ReAggregatePriceData(string code) {
            base.Channel.ReAggregatePriceData(code);
        }
        
        public System.Threading.Tasks.Task ReAggregatePriceDataAsync(string code) {
            return base.Channel.ReAggregatePriceDataAsync(code);
        }
        
        public string GetXmlDoc2StringSTRATEGY() {
            return base.Channel.GetXmlDoc2StringSTRATEGY();
        }
        
        public System.Threading.Tasks.Task<string> GetXmlDoc2StringSTRATEGYAsync() {
            return base.Channel.GetXmlDoc2StringSTRATEGYAsync();
        }
        
        public string GetXmlDoc2StringINDICATOR() {
            return base.Channel.GetXmlDoc2StringINDICATOR();
        }
        
        public System.Threading.Tasks.Task<string> GetXmlDoc2StringINDICATORAsync() {
            return base.Channel.GetXmlDoc2StringINDICATORAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DataAccess.ServiceReference1.Load_Global_SettingsResponse DataAccess.ServiceReference1.IStockService.Load_Global_Settings(DataAccess.ServiceReference1.Load_Global_SettingsRequest request) {
            return base.Channel.Load_Global_Settings(request);
        }
        
        public void Load_Global_Settings(ref commonTypes.GlobalSettings settings) {
            DataAccess.ServiceReference1.Load_Global_SettingsRequest inValue = new DataAccess.ServiceReference1.Load_Global_SettingsRequest();
            inValue.settings = settings;
            DataAccess.ServiceReference1.Load_Global_SettingsResponse retVal = ((DataAccess.ServiceReference1.IStockService)(this)).Load_Global_Settings(inValue);
            settings = retVal.settings;
        }
        
        public System.Threading.Tasks.Task<DataAccess.ServiceReference1.Load_Global_SettingsResponse> Load_Global_SettingsAsync(DataAccess.ServiceReference1.Load_Global_SettingsRequest request) {
            return base.Channel.Load_Global_SettingsAsync(request);
        }
        
        public void Save_Global_Settings(commonTypes.GlobalSettings settings) {
            base.Channel.Save_Global_Settings(settings);
        }
        
        public System.Threading.Tasks.Task Save_Global_SettingsAsync(commonTypes.GlobalSettings settings) {
            return base.Channel.Save_Global_SettingsAsync(settings);
        }
        
        public void WriteLog(byte logType, string investorCode, string desc, string source, string msg) {
            base.Channel.WriteLog(logType, investorCode, desc, source, msg);
        }
        
        public System.Threading.Tasks.Task WriteLogAsync(byte logType, string investorCode, string desc, string source, string msg) {
            return base.Channel.WriteLogAsync(logType, investorCode, desc, source, msg);
        }
        
        public void WriteExcptionLog(string investorCode, common.SysLog.LogData logData) {
            base.Channel.WriteExcptionLog(investorCode, logData);
        }
        
        public System.Threading.Tasks.Task WriteExcptionLogAsync(string investorCode, common.SysLog.LogData logData) {
            return base.Channel.WriteExcptionLogAsync(investorCode, logData);
        }
        
        public databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceMarket(System.DateTime beforeDate, string timeScaleCode, int topN) {
            return base.Channel.GetTopPriceVarrianceMarket(beforeDate, timeScaleCode, topN);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceMarketAsync(System.DateTime beforeDate, string timeScaleCode, int topN) {
            return base.Channel.GetTopPriceVarrianceMarketAsync(beforeDate, timeScaleCode, topN);
        }
        
        public databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceUser(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN) {
            return base.Channel.GetTopPriceVarrianceUser(beforeDate, timeScaleCode, userCode, topN);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceUserAsync(System.DateTime beforeDate, string timeScaleCode, string userCode, int topN) {
            return base.Channel.GetTopPriceVarrianceUserAsync(beforeDate, timeScaleCode, userCode, topN);
        }
        
        public databases.tmpDS.dataVarrianceDataTable GetTopPriceVarrianceOfUser(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN) {
            return base.Channel.GetTopPriceVarrianceOfUser(frDate, toDate, timeScaleCode, userCode, topN);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceOfUserAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, string userCode, int topN) {
            return base.Channel.GetTopPriceVarrianceOfUserAsync(frDate, toDate, timeScaleCode, userCode, topN);
        }
        
        public databases.tmpDS.dataVarrianceDataTable GetTopPriceVarriance(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN) {
            return base.Channel.GetTopPriceVarriance(frDate, toDate, timeScaleCode, topN);
        }
        
        public System.Threading.Tasks.Task<databases.tmpDS.dataVarrianceDataTable> GetTopPriceVarrianceAsync(System.DateTime frDate, System.DateTime toDate, string timeScaleCode, int topN) {
            return base.Channel.GetTopPriceVarrianceAsync(frDate, toDate, timeScaleCode, topN);
        }
        
        public databases.baseDS.lastPriceDataDataTable GetLastPrice(commonTypes.AppTypes.PriceDataType type) {
            return base.Channel.GetLastPrice(type);
        }
        
        public System.Threading.Tasks.Task<databases.baseDS.lastPriceDataDataTable> GetLastPriceAsync(commonTypes.AppTypes.PriceDataType type) {
            return base.Channel.GetLastPriceAsync(type);
        }
        
        public string GetBestStrategyCode(string stockCode, string timeFrame, int order) {
            return base.Channel.GetBestStrategyCode(stockCode, timeFrame, order);
        }
        
        public System.Threading.Tasks.Task<string> GetBestStrategyCodeAsync(string stockCode, string timeFrame, int order) {
            return base.Channel.GetBestStrategyCodeAsync(stockCode, timeFrame, order);
        }
    }
}
